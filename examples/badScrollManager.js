/*
* (c) Eric Mink, eric@mink.li, 2019
*
* This file is an example how to use Brotkeys.js for handling jumpy scrolling with the J and K keys.
* This version requires the user to press FJ to scroll downwards by 100px. Hence, it is annoying and called 'badScrollManager.js'
* See https://eric.mink.li/publications/brotkeys_quickstart.html for a quick explanation of most of the code.
*/

var manager;
// Initially set words should not cause clashes with autogenerated link hints - but be aware that the autogenerated link hints
// become longer if you use short words here. E.g. if you have a manually set word "a" here, then no other link hint can start with 
// the character 'a'.
// Make sure that you do not specify two words here, of which one is the start of the other - otherwise, the shorter one would be ignored.
var wordMap = new Map([
	["j", function(){window.scrollBy(0, 100);}],
	["k", function(){window.scrollBy(0, -100);}],
]);
// these single characters that can interrupt at any time during the word-typing mode
var interruptMap = new Map([
	["D", function(){console.log("user disabled shortcuts"); manager.disable(); manager.leave_f_mode();}],
]);

manager = new HotkeyManager(wordMap, interruptMap);
manager.interrupt_caseInsensitivity = false;

// please notify me on entering and leaving fmode simply by showing the link hints
// this is the simplest way to do this. for other options, see the examples in brotkeys.js#brotkeys_autogenerate_manager_for_anchors and brotkeys.js#brotkeys_autogenerate_manager_for_class_tag
var notifyFModeFunc = manager.genToggleKeysOnNotify(); // returns a function
manager.setNotifyFModeFunction(notifyFModeFunc); // takes the function as callback for when FMode is triggered

manager.log_prefix = "[Scrolling Brotkeys Manager] "; // optional prefix for logging to the console

// add a link hint to every anchor tag (<a/>)
manager.autogenerate(manager.GenerationEnum.tag_anchor); 
// add a link hint to every element with css class "linkhintgen"
manager.autogenerate(manager.GenerationEnum.class_tagged, "linkhintgen", undefined);